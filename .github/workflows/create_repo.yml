name: GitHub Actions Demo
on:
  workflow_dispatch:
  push:
jobs:
  create-test-case:
    runs-on: ubuntu-latest
    steps:
      # Install node and yarn
      - uses: actions/setup-node@v2
        with:
          node-version: '14.17.3'
      - run: npm install -g yarn@1.22.5

      - name: Install Apt dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y moreutils

      # Create a yarn berry project
      - run: yarn init -2

      - name: Create an `@onboarding/utils` workspace with a utility function `addOne`
        run: |
          mkdir -p utils/src
          echo "export const addOne = (val: number): number => val + 1" > utils/src/addOne.ts
          echo "{}" | jq '.name="@onboarding/utils" | .main="src/addOne.ts"' > utils/package.json

      - name: Tell yarn that we have two workspaces, frontend and utils
        run: cat package.json | jq '.workspaces=["frontend", "utils"] | .devDependencies.typescript="=4.4.4" | .name="@onboarding/root"' | sponge package.json

      - name: Create typescript files
        run: |
          echo '{"compilerOptions":{"incremental":true,"target":"es2019","module":"commonjs","lib":["esnext","es2020","es2019","dom"],"allowJs":false,"checkJs":false,"jsx":"react-jsx","declaration":true,"composite":true,"declarationMap":true,"sourceMap":true,"strict":true,"skipLibCheck":true,"noUnusedLocals":true,"noImplicitReturns":true,"noFallthroughCasesInSwitch":true,"moduleResolution":"node","baseUrl":".","types":[],"typeRoots":["@types","node_modules/@types"],"esModuleInterop":true,"resolveJsonModule":true,"forceConsistentCasingInFileNames":true}}' | jq > tsconfig.base.json
          echo '{"extends":"../tsconfig.base.json","compilerOptions":{"outDir":"../build/@onboarding/utils","tsBuildInfoFile":"../build/@onboarding/utils.tsbuildinfo","rootDir":"src"}}' | jq > utils/tsconfig.json
          echo '{}' | jq '.extends="./tsconfig.base.json" | .include=[] | .files=[] | .references=[{"path": "frontend"},{"path": "utils"}]' > tsconfig.json

      - name: Create a snowpack app
        run: yarn create snowpack-app frontend --template @snowpack/app-template-react-typescript --use-yarn --no-install --no-git

      - name: Modify the generated files a touch
        # run: |
        #   cat frontend/tsconfig.json | yarn dlx strip-json-comments-cli | jq '.extends="../tsconfig.base.json" | .compilerOptions.noEmit=false' | sponge frontend/tsconfig.json
        #   cat frontend/package.json | yarn dlx strip-json-comments-cli | jq '.name="@onboarding/frontend" | .devDependencies.typescript="=4.4.4"' | sponge frontend/package.json
        run: |
          cat frontend/tsconfig.json | yarn dlx strip-json-comments-cli 

      # - name: Install pnpify
      #   run: yarn workspace @onboarding/frontend add -D @yarnpkg/pnpify

      # # - uses: actions/checkout@v2
      # - run: bash create_repo.sh
      # - run: yarn workspace @onboarding/frontend start --open none &
      # - run: sleep 5
      # - run: |
      #     readonly status_code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/)
      #     if [ "$status_code" = "200" ]; then
      #         echo "Server queried successfully"
      #     else
      #         echo "Found invalid status code $status_code"
      #         exit 1
      #     fi
